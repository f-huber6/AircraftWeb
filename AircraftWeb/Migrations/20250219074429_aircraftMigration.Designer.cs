// <auto-generated />
using System;
using Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AircraftWeb.Migrations
{
    [DbContext(typeof(AircraftContext))]
    [Migration("20250219074429_aircraftMigration")]
    partial class aircraftMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Database.Entities.Aircraft", b =>
                {
                    b.Property<int>("AircraftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("AircraftId");

                    b.Property<int>("Altitude")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Altitude");

                    b.Property<int>("Fuel")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Fuel");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<int>("SpecificationId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("SpecificationId");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Speed");

                    b.HasKey("AircraftId");

                    b.HasIndex("SpecificationId");

                    b.ToTable("AIRCRAFTS");
                });

            modelBuilder.Entity("Database.Entities.AircraftCrew", b =>
                {
                    b.Property<int>("AircraftId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AircraftId");

                    b.Property<int>("MercenaryId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MercenaryId");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("JoinedAt");

                    b.HasKey("AircraftId", "MercenaryId");

                    b.HasIndex("MercenaryId");

                    b.ToTable("AIRCRAFT_CREW_JT");
                });

            modelBuilder.Entity("Database.Entities.AircraftSpecification", b =>
                {
                    b.Property<int>("SpecificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("SpecificationId");

                    b.Property<int>("FuelTankCapacity")
                        .HasColumnType("INTEGER")
                        .HasColumnName("FuelTankCapacity");

                    b.Property<int>("MaxAltitude")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MaxAltitude");

                    b.Property<int>("MaxSpeed")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MaxSpeed");

                    b.Property<int>("MinSpeed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SpecificationCode")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("SpecificationCode");

                    b.Property<int>("Structure")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Structure");

                    b.HasKey("SpecificationId");

                    b.ToTable("AIRCRAFT_SPECIFICATIONS");
                });

            modelBuilder.Entity("Database.Entities.Compartment", b =>
                {
                    b.Property<int>("CompartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CompartmentId");

                    b.Property<int>("AircraftId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("AircraftId");

                    b.HasKey("CompartmentId");

                    b.HasIndex("AircraftId");

                    b.ToTable("COMPARTMENTS");
                });

            modelBuilder.Entity("Database.Entities.CrimeSyndicate", b =>
                {
                    b.Property<int>("SyndicateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("SyndicateId");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("Location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("SyndicateId");

                    b.ToTable("CRIME_SYNDICATES");
                });

            modelBuilder.Entity("Database.Entities.Machinery", b =>
                {
                    b.Property<int>("MachineryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("MachineId");

                    b.Property<int?>("CompartmentId")
                        .IsRequired()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CompartmentId");

                    b.Property<string>("Function")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Function");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Label");

                    b.Property<string>("MachineryType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.HasKey("MachineryId");

                    b.HasIndex("CompartmentId");

                    b.ToTable("MACHINERIES");

                    b.HasDiscriminator<string>("MachineryType").HasValue("Machinery");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Database.Entities.Mercenary", b =>
                {
                    b.Property<int>("MercenaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("MercenaryId");

                    b.Property<int>("BodySkills")
                        .HasColumnType("INTEGER")
                        .HasColumnName("BodySkills");

                    b.Property<int>("CombatSkills")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CombatSkills");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("Firstname");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("Lastname");

                    b.HasKey("MercenaryId");

                    b.ToTable("MERCENARIES");
                });

            modelBuilder.Entity("Database.Entities.MercenaryReputation", b =>
                {
                    b.Property<int>("SyndicateId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("SyndicateId");

                    b.Property<int>("MercenaryId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MercenaryId");

                    b.Property<string>("ReputationChange")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("TEXT")
                        .HasColumnName("ReputationChange");

                    b.HasKey("SyndicateId", "MercenaryId");

                    b.HasIndex("MercenaryId");

                    b.ToTable("MERCENARY_REPUTATIONS");
                });

            modelBuilder.Entity("Database.Entities.EnergySystem", b =>
                {
                    b.HasBaseType("Database.Entities.Machinery");

                    b.ToTable("MACHINERIES");

                    b.HasDiscriminator().HasValue("EnergySystem");
                });

            modelBuilder.Entity("Database.Entities.EnvironmentalSystem", b =>
                {
                    b.HasBaseType("Database.Entities.Machinery");

                    b.ToTable("MACHINERIES");

                    b.HasDiscriminator().HasValue("EnvironmentalSystem");
                });

            modelBuilder.Entity("Database.Entities.Weapon", b =>
                {
                    b.HasBaseType("Database.Entities.Machinery");

                    b.ToTable("MACHINERIES");

                    b.HasDiscriminator().HasValue("Weapon");
                });

            modelBuilder.Entity("Database.Entities.Aircraft", b =>
                {
                    b.HasOne("Database.Entities.AircraftSpecification", "Specification")
                        .WithMany()
                        .HasForeignKey("SpecificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specification");
                });

            modelBuilder.Entity("Database.Entities.AircraftCrew", b =>
                {
                    b.HasOne("Database.Entities.Aircraft", "Aircraft")
                        .WithMany("Crew")
                        .HasForeignKey("AircraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Entities.Mercenary", "Mercenary")
                        .WithMany("Crews")
                        .HasForeignKey("MercenaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aircraft");

                    b.Navigation("Mercenary");
                });

            modelBuilder.Entity("Database.Entities.Compartment", b =>
                {
                    b.HasOne("Database.Entities.Aircraft", "Aircraft")
                        .WithMany("Compartments")
                        .HasForeignKey("AircraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aircraft");
                });

            modelBuilder.Entity("Database.Entities.Machinery", b =>
                {
                    b.HasOne("Database.Entities.Compartment", "Compartment")
                        .WithMany("Machineries")
                        .HasForeignKey("CompartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compartment");
                });

            modelBuilder.Entity("Database.Entities.MercenaryReputation", b =>
                {
                    b.HasOne("Database.Entities.Mercenary", "Mercenary")
                        .WithMany("Reputations")
                        .HasForeignKey("MercenaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Entities.CrimeSyndicate", "CrimeSyndicate")
                        .WithMany()
                        .HasForeignKey("SyndicateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CrimeSyndicate");

                    b.Navigation("Mercenary");
                });

            modelBuilder.Entity("Database.Entities.Aircraft", b =>
                {
                    b.Navigation("Compartments");

                    b.Navigation("Crew");
                });

            modelBuilder.Entity("Database.Entities.Compartment", b =>
                {
                    b.Navigation("Machineries");
                });

            modelBuilder.Entity("Database.Entities.Mercenary", b =>
                {
                    b.Navigation("Crews");

                    b.Navigation("Reputations");
                });
#pragma warning restore 612, 618
        }
    }
}
